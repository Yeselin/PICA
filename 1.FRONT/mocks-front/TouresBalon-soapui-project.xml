<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3267c5e3-89d8-46eb-94c0-e0289ee1f0f2" activeEnvironment="Default" name="TouresBalon" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="c1166c0c-ca6c-406d-9c48-bc5415f133fa" port="8081" path="/" host="kuiper" name="toresbalon" docroot=""><con:settings/><con:properties/><con:restMockAction name="/api/products/find" method="GET" resourcePath="/api/products/find" id="11336da2-29c5-4a49-b8e3-8b46a2bd684e"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="SUCCESS" id="54ae5130-20da-4042-b4ff-2dc9281c2b89" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
    {
        "id": 1,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "yojvmf5pvy.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 2,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "tqodwbygkq.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 3,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "cd9yuhoatm.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 1,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "0kk6fkmq4v.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 2,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "r30mnqtxkn.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 3,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "xw1h7dtawh.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    {
        "id": 1,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "7mi3prjyhb.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 2,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "qbqmbjdtbw.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 3,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "ykowkh9281.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    {
        "id": 1,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "43tfr2k7kb.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 2,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "rbdjdihfcu.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 3,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "5mvbe8mo50.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    {
        "id": 1,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "lsc4fydt8x.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 2,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "z2btra0fti.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    },
    
    {
        "id": 3,
        "spectacle_date": "30-09-2018",
        "arrival_date": "30-09-2018",
        "departure_date": "30-09-2018",
        "transport_name": "Avianca",
        "transport_cost": 120934,
        "spectacle_name": "Concierto",
        "spectacle_cost": 134930,
        "lodging_name": "El Prado hotel",
        "lodging_cost": 123232,
        "name": "Partido de futbol y concierto",
        "description": "No te pierdas este tremendo partido",
        "image_ref": "ox1i3ywiav.jpg",
        "source_city_name": "Bogota",
        "source_country_name": "Colombia",
        "source_city_cost": 1232323,
        "target_city_name": "Barranquilla",
        "target_country_name": "Colombia",
        "target_city_cost": 12388
    }
    
    ]</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>GET,POST,OPTIONS,DELETE,PUT</con:value></con:header><con:header><con:name>Content-Type</con:name><con:value>application/json</con:value></con:header></con:response></con:restMockAction><con:restMockAction name="/api/products/top-five" method="GET" resourcePath="/api/products/topfive" id="919cfbd1-9d19-4213-8d82-9e1e231106c4"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath></con:restMockAction><con:restMockAction name="/api/orders" method="POST" resourcePath="/api/orders" id="cb5a8d3f-012c-45e3-af98-416a366cefc0"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath></con:restMockAction><con:restMockAction name="/api/customers" method="POST" resourcePath="/api/customers" id="619a84d3-09d9-47a0-93ba-7330074b9215"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="SUCCESS" id="ef31e544-81b5-4efb-8d50-86b0c971c1e7" httpResponseStatus="201" mediaType="application/json"><con:settings/><con:responseContent>{
  "message": "SUCCESS"
}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/api/customers" method="PUT" resourcePath="/api/customers" id="ec3e1173-a41f-49c6-bc7e-b74f751a8e12"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath></con:restMockAction><con:restMockAction name="/api/customers/login" method="POST" resourcePath="/api/customers/login" id="070eaa61-fd10-41e5-abdd-2a76cd12f322"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath></con:restMockAction><con:restMockAction name="/api/products/campaigns" method="GET" resourcePath="/api/products/campaigns" id="482b4ee3-9c9d-4785-a563-7f0386f51c01"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="SUCCESS" id="64f4a107-ead9-42b9-a1ec-2a1f2a61a5c9" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
{
    "id": 1,
    "spectacle_date": "30-09-2018",
    "arrival_date": "30-09-2018",
    "departure_date": "30-09-2018",
    "transport_name": "Avianca",
    "transport_cost": 120934,
    "spectacle_name": "Concierto",
    "spectacle_cost": 134930,
    "lodging_name": "El Prado hotel",
    "lodging_cost": 123232,
    "name": "Partido de futbol y concierto",
    "description": "No te pierdas este tremendo partido",
    "image_ref": "7mi3prjyhb.jpg",
    "source_city_name": "Bogota",
    "source_country_name": "Colombia",
    "source_city_cost": 1232323,
    "target_city_name": "Barranquilla",
    "target_country_name": "Colombia",
    "target_city_cost": 12388,
    "cost_total": 900000
},

{
    "id": 2,
    "spectacle_date": "30-09-2018",
    "arrival_date": "30-09-2018",
    "departure_date": "30-09-2018",
    "transport_name": "Avianca",
    "transport_cost": 120934,
    "spectacle_name": "Concierto",
    "spectacle_cost": 134930,
    "lodging_name": "El Prado hotel",
    "lodging_cost": 123232,
    "name": "Partido de futbol y concierto",
    "description": "No te pierdas este tremendo partido",
    "image_ref": "c8wwal14gd.jpg",
    "source_city_name": "Bogota",
    "source_country_name": "Colombia",
    "source_city_cost": 1232323,
    "target_city_name": "Barranquilla",
    "target_country_name": "Colombia",
    "target_city_cost": 12388,
    "cost_total": 890700
},

{
    "id": 3,
    "spectacle_date": "30-09-2018",
    "arrival_date": "30-09-2018",
    "departure_date": "30-09-2018",
    "transport_name": "Avianca",
    "transport_cost": 120934,
    "spectacle_name": "Concierto",
    "spectacle_cost": 134930,
    "lodging_name": "El Prado hotel",
    "lodging_cost": 123232,
    "name": "Partido de futbol y concierto",
    "description": "No te pierdas este tremendo partido",
    "image_ref": "kksz8b1my6.jpg",
    "source_city_name": "Bogota",
    "source_country_name": "Colombia",
    "source_city_cost": 1232323,
    "target_city_name": "Barranquilla",
    "target_country_name": "Colombia",
    "target_city_cost": 12388,
    "cost_total": 1500000
}

]</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>GET,POST,OPTIONS,DELETE,PUT</con:value></con:header><con:header><con:name>Content-Type</con:name><con:value>application/json</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>