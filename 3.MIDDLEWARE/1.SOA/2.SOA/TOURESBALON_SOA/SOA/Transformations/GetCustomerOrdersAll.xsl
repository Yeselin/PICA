<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns1="http://touresBalon.com/schema/orders" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" exclude-result-prefixes=" oracle-xsl-mapper xsi xsd xsl ns1 socket dvm mhdr oraxsl oraext xp20 xref"
                xmlns:ns2="http://touresBalon.com/schema/products" xmlns:ns0="http://touresBalon.com/schema/customer">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source/>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/xsd/OrderCanonicalModel.xsd"/>
            <oracle-xsl-mapper:rootElement name="getOrderResponse" namespace="http://touresBalon.com/schema/orders"/>
            <oracle-xsl-mapper:param name="Input"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/xsd/OrderCanonicalModel.xsd"/>
            <oracle-xsl-mapper:rootElement name="getOrderResponse" namespace="http://touresBalon.com/schema/orders"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.3.0(XSLT Build 170820.1700.2557) AT [MON NOV 12 16:33:03 COT 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="Input"/>
   <xsl:template match="/">
      <ns1:getOrderResponse>
         <xsl:for-each select="$Input/ns1:getOrderResponse/ns1:order">
            <ns1:order>
               <ns1:orderId>
                  <xsl:value-of select="ns1:orderId"/>
               </ns1:orderId>
               <ns1:orderDate>
                  <xsl:value-of select="ns1:orderDate"/>
               </ns1:orderDate>
               <ns1:orderPrice>
                  <xsl:value-of select="ns1:orderPrice"/>
               </ns1:orderPrice>
               <ns1:orderStatus>
                  <xsl:value-of select="ns1:orderStatus"/>
               </ns1:orderStatus>
               <ns1:comments>
                  <xsl:value-of select="ns1:comments"/>
               </ns1:comments>
               <ns1:product>
                  <ns1:product>
                     <xsl:if test="ns1:product/ns1:product/ns2:productId">
                        <ns2:productId>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:productId"/>
                        </ns2:productId>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:productName">
                        <ns2:productName>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:productName"/>
                        </ns2:productName>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:spectacleId">
                        <ns2:spectacleId>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:spectacleId"/>
                        </ns2:spectacleId>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:transportId">
                        <ns2:transportId>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:transportId"/>
                        </ns2:transportId>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:lodgingId">
                        <ns2:lodgingId>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:lodgingId"/>
                        </ns2:lodgingId>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:arrivalDate">
                        <ns2:arrivalDate>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:arrivalDate"/>
                        </ns2:arrivalDate>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:departureDate">
                        <ns2:departureDate>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:departureDate"/>
                        </ns2:departureDate>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:code">
                        <ns2:code>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:code"/>
                        </ns2:code>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:description">
                        <ns2:description>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:description"/>
                        </ns2:description>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:image">
                        <ns2:image>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:image"/>
                        </ns2:image>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:sourceCityId">
                        <ns2:sourceCityId>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:sourceCityId"/>
                        </ns2:sourceCityId>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:targetCityId">
                        <ns2:targetCityId>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:targetCityId"/>
                        </ns2:targetCityId>
                     </xsl:if>
                     <xsl:if test="ns1:product/ns1:product/ns2:cost">
                        <ns2:cost>
                           <xsl:value-of select="ns1:product/ns1:product/ns2:cost"/>
                        </ns2:cost>
                     </xsl:if>
                  </ns1:product>
                  <ns1:quantity>
                     <xsl:value-of select="ns1:product/ns1:quantity"/>
                  </ns1:quantity>
               </ns1:product>
            </ns1:order>
         </xsl:for-each>
      </ns1:getOrderResponse>
   </xsl:template>
</xsl:stylesheet>
